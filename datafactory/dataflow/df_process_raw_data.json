{
	"name": "df_process_raw_data",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_raw_drugs_data",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "medicinedata_preprocessed",
						"type": "DatasetReference"
					},
					"name": "sinkPreProcess"
				}
			],
			"transformations": [
				{
					"name": "selectPreprocess"
				}
			],
			"scriptLines": [
				"source(output(",
				"          drug_name as string,",
				"          medical_condition as string,",
				"          side_effects as string,",
				"          generic_name as string,",
				"          drug_classes as string,",
				"          brand_names as string,",
				"          activity as string,",
				"          rx_otc as string,",
				"          pregnancy_category as string,",
				"          csa as string,",
				"          alcohol as string,",
				"          related_drugs as string,",
				"          medical_condition_description as string,",
				"          rating as string,",
				"          no_of_reviews as string,",
				"          drug_link as string,",
				"          medical_condition_url as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          drug_name,",
				"          medical_condition,",
				"          generic_name,",
				"          brand_names,",
				"          activity",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectPreprocess",
				"selectPreprocess sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          drug_name as string,",
				"          medical_condition as string,",
				"          generic_name as string,",
				"          brand_names as string,",
				"          activity as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sinkPreProcess"
			]
		}
	}
}